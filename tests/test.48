#!/bin/bash
#
#testname:handlebody links (takes almost one minute)
#

echo "Handlebody links up to 6 crossings"

function computeA4A5 ()
{
  while read num
  do
    file="$prefix/hl${num}.knot"
    res4=`./contour -q ks_A4 --out --inner $file`
    res5=`./contour -q ks_A5 --out --inner $file`
    echo "$num:$res4:$res5"
  done
}

function distinguish ()
{
  while read num
  do
    file="$prefix/hl${num}.knot"
    ccnum=`./contour -q countcc $file`
    ccnums=`seq $ccnum`
    result=$(for comp in $ccnums
    do
      ./contour -q removecc $comp $file | ./contour -q ks_A4 --out --inner
    done | sort -n)
    result=`echo $result`
    echo "$num:$result"
  done
}

echo "<name>:<ks_A4>:<ks_A5>"

nums=`seq 15`
list6x=`for n in $nums; do echo -n " 6_${n}"; done`
listall="4_1 5_1${list6x}"
prefix="examples/handlebody_knots"

#
# search for two-component links
#
list2c=""
for n in $listall
do
  count=`./contour -q countcc $prefix/hl${n}.knot 2>/dev/null`
  if [ "$count" = "2" ]; then list2c="$list2c $n"; fi
done
list2c=`echo $list2c`

#
# search for three-component links
#
list3c=""
for n in $listall
do
  count=`./contour -q countcc $prefix/hl${n}.knot 2>/dev/null`
  if [ "$count" = "3" ]; then list3c="$list3c $n"; fi
done
list3c=`echo $list3c`

#
# search for four-component links
#
list4c=""
for n in $listall
do
  count=`./contour -q countcc $prefix/hl${n}.knot 2>/dev/null`
  if [ "$count" = "4" ]; then list4c="$list4c $n"; fi
done
list4c=`echo $list4c`

############################################################
############################################################

echo -n "Handlebody links with two components:"
for n in $list2c
do
  echo -n " HL${n}"
done
echo ""

res4=`./contour union examples/knots/knot_0_1.knot $prefix/hk0_1.knot | ./contour --out --inner -q ks_A4`
res5=`./contour union examples/knots/knot_0_1.knot $prefix/hk0_1.knot | ./contour --out --inner -q ks_A5`
echo "SPLIT link:$res4:$res5"

tablein=`echo "$list2c" | tr " " "\n"`
table=`echo "$tablein" | computeA4A5`
echo "$table"
twins=`echo "$table" | cut -f2,3 -d: | sort | uniq -d`

if [ -n "$twins" ]
then
  echo ""
  echo "There are indistinguishable entries, ks_A4 after removal of each component:"
  for group in $twins
  do
    knots=`echo "$table" | grep "$group" | cut -f1 -d:`
    echo "$knots" | distinguish
  done
  echo
fi

res4=`./contour union examples/knots/knot_0_1.knot $prefix/hk4_1.knot | ./contour --out --inner -q ks_A4`
echo "SPLIT link with HK4_1:$res4:---"

############################################################

echo ""
echo -n "Handlebody links with three components:"
for n in $list3c
do
  echo -n " HL${n}"
done
echo ""

res4=`./contour -q ks_A4 --out --inner $prefix/hl6_11_fake.knot`
res5=`./contour -q ks_A5 --out --inner $prefix/hl6_11_fake.knot`
echo "6_11_fake:$res4:$res5"

tablein=`echo "$list3c" | tr " " "\n"`
table=`echo "$tablein" | computeA4A5`
echo "$table"
twins=`echo "$table" | cut -f2,3 -d: | sort | uniq -d`

if [ -n "$twins" ]
then
  echo ""
  echo "There are indistinguishable entries, ks_A4 after removal of each component:"
  for group in $twins
  do
    knots=`echo "$table" | grep "$group" | cut -f1 -d:`
    echo "$knots" | distinguish
  done
  echo
fi

############################################################

echo -n "Handlebody links with four components:"
for n in $list4c
do
  echo -n " HL${n}"
done
echo ""

for num in $list4c
do
  file="$prefix/hl${num}.knot"
  res4=`./contour -q ks_A4 --out --inner $file`
  echo "$num:$res4:---"
done

