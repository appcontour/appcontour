2024.05.12
echo "fpgroup { <a,b,c,d; abdAdaDBdAD, cdCD> }" | ./contour alexander
Computing second Alexander ideal (--foxd = 2)
# generic ideal computation...
# *** Warning: result can be noncanonical ***
Alexander polynomial:
contour: alexander.c:669: printout_ideal: Assertion `ai->l2num == 1' failed.
Aborted (core dumped)


2024.04.12
embedding:0xca { 0: (6, 7, 8, 8), 1: (5, 7, 7, 6), 2: (3, 4, 5, 5), 3: (2, 8, 4, 4), 4: (2, 3, 3, 7), 5: (1, 6, 2, 2), 6: (0, 8, 5, 1), 7: (0, 1, 1, 4), 8: (0, 0, 3, 6) }
results in a region description that in turn leads to a knot group with deficiency 0 (should be 1):

  echo "embedding:0xca { 0: (6, 7, 8, 8), 1: (5, 7, 7, 6), 2: (3, 4, 5, 5), 3: (2, 8, 4, 4), 4: (2, 3, 3, 7), 5: (1, 6, 2, 2), 6: (0, 8, 5, 1), 7: (0, 1, 1, 4), 8: (0, 0, 3, 6) }" | ./contour print | ./contour --out fg -q
  <a,b,c; aBcAcaCbAcAC, abAcaCbaBcAC, aBcbAcaCbcAC>

using invariants ks_A4 ks_A5 ks_A6 ks_sl2,7 this should correspond to K9_42

a similar problem with embedding #198 with choice value c0xb6
embedding:0xb6 { 0: (5, 6, 8, 7), 1: (3, 4, 7, 8), 2: (3, 6, 5, 4), 3: (1, 8, 6, 2), 4: (1, 2, 5, 7), 5: (0, 7, 4, 2), 6: (0, 2, 3, 8), 7: (0, 1, 4, 5), 8: (0, 6, 3, 1) }


2023.02.13
The order of the connected components differs when dealing with the apparent contour and
when dealing with the cell complexes


2018.12.07
$ rdt="dtcode {[4> 8 10 -14 2 -16 -18 -6 -12]}"
$ echo "$rdt" | ./contour gausscode
gausscode {{1< -5 2 -1> 3 8 -4 -2 5 -3 -6 9 -7 4 -8 6 -9 7}}
$ echo "$rdt" | ./contour gausscode | ./contour dtcode
Conversion from gausscode to DTcode is not implemented in this situation
gausscode {{1< -5 2 -1> 3 8 -4 -2 5 -3 -6 9 -7 4 -8 6 -9 7}}


2018.12.06 (SOLVED)
$ echo "dtcode {[6> -8][-10 12 -14 2 -4]}" | ./contour --out fg
contour: readdtcode.c:99: readdtcode2loiv: Assertion `lv->handedness == 0' failed.
Aborted (core dumped)


2018.07.14 (SOLVED)
test 44 does not work if contour is not installed


2018.06.15 (SOLVED)
echo "knot{^;U;}" | contour knot2info


2016.06.08 (SOLVED)

$ echo "fpgroup{<a,b; aA>}" | contour --nosimplify --out alexander
Computing first Alexander ideal (--foxd = 1)
Segmentation fault (core dumped)


2016.05.21 (SOLVED)

$ ./utils/kanenobu.sh 10 -2 | ./contour --out alexander --foxd 2
reading knot description                                                                                                                   
FATAL: above max allowed int size!

A workaround (see tests/test.32) is to modify randomly the surface description, e.g:

$ ./utils/kanenobu.sh 10 -2 | ./contour frontback | ./contour --out alexander --foxd 2
# *** Warning: result can be noncanonical ***
Alexander ideal generated by:
+6;
+1+3t+t^2;


2016.05.18 (REQUIRES GROEBNER, SHOULD BE POSSIBLE NOW)
[update 2018.05.23] the computation of the ideal in one indeterminate now uses "long long int"
and the problem is not present, at least for this example, when computing the ideal.
However the gcd is still computed "the old way" so for now we still have an error for:
kanenobu.sh 10 -2 | contour --out alexander --foxd 2 --principal

[update 2016.05.19] This is now mitigated by the ideal simplification performed beforehand, which
leads to a correct result for this example.  It remains true however that the spread value
obtained when computing the principal gcd ideal can in general be a strict multiple of the
minimal value.  A counterexample can be obtained by applying the extended Euclid algorithm to
a = 4t-3 and b = 2t+3.

./utils/kanenobu.sh 4 -2 | ./contour --out alexander --internalcheck --principal --foxd 3 -v
Fuzzy Alexander polynomial (up to t -> 1/t) with spread factor 50:
+1;

third elementary ideal should instead be the whole ring


2016.05.08

./contour afg --outside examples/twohollowsphere.morse -q --autosurgery

suggest_p_surgery is not able to find an appropriate surgery!



option --autosurgery produces different output for some tests:  check that they
are equivalent:

----- test 17 (checked, see tests/test.17)

----- test 24 (twice) and 26 --

$./contour --out alexander examples/conway_pinched.knot -q --noautosurgery
reading knot description
d = 2
# *** Warning: result can be noncanonical ***
Ideal [
+1-u-2v+2uv+u^2v+uv^2-2u^2v^2+u^3v^2;
(-1+u-u^2+u^3) (u - 1);
(-1+u-u^2+u^3) (v - 1);
(+2-2u+u^2-u^3-uv+2u^2v-u^3v+u^4v) (u - 1);
(+2-2u+u^2-u^3-uv+2u^2v-u^3v+u^4v) (v - 1);
]
$ ./contour --out alexander examples/conway_pinched.knot -q --autosurgery
reading knot description
d = 2
# *** Warning: result can be noncanonical ***
Ideal [
-u+2u^2-2u^3+u^4+v-u^2v+2u^3v-u^4v-v^2+uv^2;
(-1+2u-2u^2+u^3+2v-2uv+2u^2v-u^3v) (u - 1);
(-1+2u-2u^2+u^3+2v-2uv+2u^2v-u^3v) (v - 1);
(-1+2u-2u^2+u^3+v-2uv+u^2v-u^3v) (u - 1);
(-1+2u-2u^2+u^3+v-2uv+u^2v-u^3v) (v - 1);
]

----- test 24 and 26 ---------

(sembra che entrambi siano l'ideale banale [1])
$ ./contour --out alexander examples/ochiai_mod_to_genus2.knot -q --noautosurgery
reading knot description
d = 2
# *** Warning: result can be noncanonical ***
Ideal [
+1-2u+u^2+2uv-u^2v;
(+1-u) (u - 1);
(+1-u) (v - 1);
]
$ ./contour --out alexander examples/ochiai_mod_to_genus2.knot -q --autosurgery
reading knot description
d = 2
# *** Warning: result can be noncanonical ***
Ideal [
+u-u^2+v-uv+u^2v;
(+1) (u - 1);
(+1) (v - 1);
]


2016.05.04

-------
update (2016.05.08):
mitigation: the new command "suggest_p_surgery" can now be used to suggest a "punchhole" surgery
that does not change the fundamental group, but forces an increment in the initial deficiency of
the group presentation.  Note that in case of "--out" cell complex, we first need to "wrap" the
the contour into a big ball and then operate the surgery (then use --in in place of --out).
The new option "--autosurgery" performs this automatically

$ ./utils/kanenobu.sh -1 -3 | ./contour wrap | ./contour suggest_p_surgery
[...]
contour punchhole -r 10 -s 0
$ ./utils/kanenobu.sh -1 -3 | ./contour wrap | ./contour punchhole -r 10 -s 0 | ./contour --in alexander
[...]
Computing first Alexander ideal (--foxd = 1)
Alexander polynomial (up to t -> 1/t):
+1-3t+5t^2-7t^3+5t^4-3t^5+t^6;
-------

$ cd utils
$ ./kanenobu.sh -1 -3 | contour --out alexander
reading knot description
WARNING: deficiency: 0, espected value: 1
Computing first Alexander ideal (--foxd = 1)
Cannot compute Alexander polynomial because there are too many relators

Questo non dovrebbe succedere, essendo il gruppo di un nodo!

Failing example:
knot {
        ^       ;
  |   ^   ^   | ;
  |  |  X  |  | ;
 | ^ || ^ || ^ |;
  X X X   x x x ;
 | U |X   x| U |;
 |   U | | U   |;
  |     X     | ;
  |     X     | ;
  |     X     | ;
    U       U   ;
}

The corresponding region description can be found in bugs/failing_kanenobu.sketch

Indeed the resulting finitely presented group is:

<a,b,c; abcbCBACbcabcBCBcbcbCBACBcabcBCBCbc, abccBACBcbCBACBBcbcbCBACBBcabcBCBCbbcabcBCbc, abcbCBACbcabcBCbcabcBCbcabCBACBcbCBACBc>

whereas it should have one less relator than generators...



2010.10.14

MENDES GRAPH
calcolo della caratteristica di Eulero-Poincare' per
l'esempio examples/internalknot_nocusps.sketch,
ci si aspetterebbe due nodi con genere 2.

----------------------------------------------------------------

2008.11.17

bug in showcontour (doptimize)

failing example:
showcontour prova.morse --pause

problem in
./show/showcontour prova.morse --pause
found an unwind at (11.000000,8.000000)
showcontour: doptimize.c:882: check_unwind: Assertion `ld->earc->refcount >1' failed.
Abortito

workaround...
by now we comment definition of DOPT_UNWIND:
#define DOPT_UNWIND

it seems that it finds an "unwind" where it shouldn't

where prova.morse is:

-----------------------------------------------------------------
morse {
                        ^l0               ^l0                ;
                      /   \             /   \                ;
                     /     \           /     \               ;
                   /    ^r0  \       /    ^r0  \             ;
                  /   /   \   \     /   /   \   \            ;
                 /   /     \     Xd2   /     \   \           ;
               /   /        \  /  \u0/         \   \         ;
             /   /           Xd0   Xu2           \   \       ;
           /   /            / \d0 / \u0            \   \     ;
         /   /             /     Xu0d0\              \   \   ;
         \   \             \     Xd2   /             /   /   ;
           \   \            \  /  \u0/             /   /     ;
             \   \           Xd0   Xu2           /   /       ;
               \   \        / \d0 / \u0        /   /         ;
                 \   \     /     Xu0d0\      /   /           ;
                  \   \   /   /     \   \   /   /            ;
                   \    U    /       \    U    /             ;
                     \     /           \     /               ;
                      \   /             \   /                ;
                        U                 U                  ;
}
