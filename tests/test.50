#testname:embeddings
#

#
# computing connectedness of an embedding
#
#these are embeddings with increasing connectivity

./contour -q connectivity examples/handlebody_knots/hk7_69.embedding
./contour -q connectivity examples/handlebody_knots/hk7_61.embedding
./contour -q connectivity examples/handlebody_knots/hk7_40.embedding
./contour -q connectivity examples/handlebody_knots/hk7_39.embedding

# computing the wirtinger presentation (no meridians/longitudes, mer-long for first and second component

./contour -q wirtinger examples/embeddings/twohandcuffsringed.embedding
./contour -q wirtinger examples/embeddings/twohandcuffsringed.embedding --ccemb 1
./contour -q wirtinger examples/embeddings/twohandcuffsringed.embedding --ccemb 2

# the following computes an invariant on the link group with a preferred longitude of the
# torus component added as a relator
# computation is performed on hl6_1 and on en equivalent diagram where the torus component has
# a selfcrossing (this has implication in the computation of the *preferred* longitude

./contour wirtinger examples/handlebody_knots/hl6_1.embedding --ccemb 2 -Q --longitudeasrelator | ./contour ks_A5 -q
./contour wirtinger examples/handlebody_knots/hl6_1twisted.embedding --ccemb 2 -Q --longitudeasrelator | ./contour ks_A5 -q

# action ccasloop computes the fund. group (using the wirtinger presentation) but treats the component indicated
# by option "--ccemb <n>" as a loop in the fundamental group (added as selected element) and is excluded
# in the wirtinger presentation
# adding option "--loopasrelator" adds the loop as an additional relator instead

./contour ccasloop examples/handlebody_knots/hl6_4.embedding --loopcc 2 -Q | ./contour ks_A5 -q
./contour ccasloop examples/handlebody_knots/hl6_4.embedding --loopcc 2 -Q --loopasrelator | ./contour ks_A5 -q

#
# ask about selfcrossing and mutual crossings between different components
#

./contour crossings examples/handlebody_knots/hl6_1.embedding -q

#
# action "embrules --comb" checks for some kind of nonminimality in the presence of a "comb"
#

emb1="embedding:16 { 0: (7, 8, 9), 1: (6, 9, 8), 2: (3, 7, 9), 3: (2, 6, 5), 4: (5, 5, 7, 7), 5: (3, 6, 4, 4), 6: (1, 8, 5, 3), 7: (0, 2, 4, 4), 8: (0, 6, 1, 9), 9: (0, 8, 1, 2) }"
emb2="embedding:11 { 0: (7, 8, 9), 1: (5, 9, 6), 2: (3, 9, 8), 3: (2, 7, 6), 4: (7, 7, 8, 8), 5: (1, 6, 6, 9), 6: (1, 3, 5, 5), 7: (0, 3, 4, 4), 8: (0, 4, 4, 2), 9: (0, 2, 1, 5) }"

echo "$emb1" | ./contour embrules --comb 
echo "$emb2" | ./contour embrules --comb 

